<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:scg="clr-namespace:System.Collections.Generic;assembly=netstandard"
             xmlns:sp="clr-namespace:ScottPlot.Avalonia;assembly=ScottPlot.Avalonia"
             xmlns:ai="clr-namespace:SimpleAi.UI"
             xmlns:vm="clr-namespace:SimpleAi.UI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="SimpleAi.UI.Views.DigitTraining" x:DataType="vm:DigitTrainingViewModel">
    <UserControl.DataContext>
        <vm:DigitTrainingViewModel />
    </UserControl.DataContext>

    <Grid ColumnDefinitions="Auto, Auto, *, Auto" RowDefinitions="*, *, Auto">
        <ScrollViewer Grid.Column="0" Grid.Row="0" Grid.RowSpan="3">
            <StackPanel Margin="0 0 10 0">
                <StackPanel.Resources>
                    <scg:List x:Key="ActivationFunctions" x:TypeArguments="ai:ActivationFunction">
                        <ai:ActivationFunction>Sigmoid</ai:ActivationFunction>
                        <ai:ActivationFunction>TanH</ai:ActivationFunction>
                        <ai:ActivationFunction>ReLu</ai:ActivationFunction>
                        <ai:ActivationFunction>SiLu</ai:ActivationFunction>
                        <ai:ActivationFunction>Softmax</ai:ActivationFunction>
                    </scg:List>
                </StackPanel.Resources>

                <Label Target="TrainingDataBtn">Training Data*</Label>
                <Button Name="TrainingDataBtn" Margin="0 2" HorizontalAlignment="Stretch"
                        Content="{Binding TrainingDataFileName, Mode=OneWay}"
                        Command="{Binding SelectTrainingDataFileCommand}"
                        CommandParameter="{Binding $parent[Window]}" />
                <Label Target="TestingDataBtn">Testing Data*</Label>
                <Button Name="TestingDataBtn" Margin="0 2" HorizontalAlignment="Stretch"
                        Content="{Binding TestingDataFileName, Mode=OneWay}"
                        Command="{Binding SelectTestingDataFileCommand}"
                        CommandParameter="{Binding $parent[Window]}" />
                <Label Target="HiddenLayersText">Hidden layers</Label>
                <TextBox Name="HiddenLayersText" Margin="0 2" HorizontalAlignment="Stretch"
                         Text="{Binding HiddenLayers, Mode=TwoWay}" />
                <Label Target="HiddenActivationFunction">Hidden layers' activation function*</Label>
                <ComboBox Name="HiddenActivationFunction" Margin="0 2" HorizontalAlignment="Stretch"
                          ItemsSource="{StaticResource ActivationFunctions}"
                          SelectedItem="{Binding HiddenActivationFunction, Mode=TwoWay}" />
                <Label Target="OutputActivationFunction">Output activation function*</Label>
                <ComboBox Name="OutputActivationFunction" Margin="0 2" HorizontalAlignment="Stretch"
                          ItemsSource="{StaticResource ActivationFunctions}"
                          SelectedItem="{Binding OutputActivationFunction, Mode=TwoWay}" />
                <Label Target="LearningRateText">Learning rate*</Label>
                <NumericUpDown Name="LearningRateText" Margin="0 2" HorizontalAlignment="Stretch" Minimum="0.000001"
                               Maximum="10000" Value="{Binding LearningRate, Mode=TwoWay}"
                               ParsingNumberStyle="AllowDecimalPoint" ClipValueToMinMax="False" />
                <Label Target="LearningRateDecayText">Learning rate decay*</Label>
                <NumericUpDown Name="LearningRateDecayText" Margin="0 2" HorizontalAlignment="Stretch"
                               Minimum="0.000001" Maximum="10000" Value="{Binding LearningRateDecay, Mode=TwoWay}"
                               ParsingNumberStyle="AllowDecimalPoint" ClipValueToMinMax="False" />
                <Label Target="BatchSizeText">Batch size*</Label>
                <NumericUpDown Name="BatchSizeText" Margin="0 2" HorizontalAlignment="Stretch" Minimum="0"
                               Maximum="10000" Value="{Binding BatchSize, Mode=TwoWay}"
                               ParsingNumberStyle="None" ClipValueToMinMax="True" />
                <Label Target="UseMultiThreadingCheck">Multithreading?</Label>
                <CheckBox Name="UseMultiThreadingCheck" Margin="0 2" HorizontalAlignment="Stretch"
                          IsChecked="{Binding UseMultiThreading, Mode=TwoWay}" />
                <Label Target="DoGraphUpdatesCheck">Update Graphs?</Label>
                <CheckBox Name="DoGraphUpdatesCheck" Margin="0 2" HorizontalAlignment="Stretch"
                          IsChecked="{Binding DoGraphUpdates, Mode=TwoWay}" />
            </StackPanel>
        </ScrollViewer>
        <GridSplitter Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" Margin="10 0 0 0" Background="LightGray"
                      ResizeDirection="Columns" />
        <Grid Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" ColumnDefinitions="Auto,*,Auto"
              RowDefinitions="*, Auto, Auto">
            <Button Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                    Command="{Binding GoToPreviousImageCommand}"><![CDATA[<]]></Button>
            <Image Grid.Row="0" Grid.Column="1" Source="{Binding CurrentImage, Mode=OneWay}" />
            <Button Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                    Command="{Binding GoToNextImageCommand}"><![CDATA[>]]></Button>
            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center"
                       Text="{Binding CurrentImageClassification, Mode=OneWay}" />
            <Button Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                    Command="{Binding GoToRandomImageCommand}">
                Random
            </Button>
        </Grid>
        <sp:AvaPlot Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Margin="0 0 0 5" Name="Plot" />
        <TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" TextAlignment="Left"
                   Text="{Binding StatusText}" />
        <StackPanel Grid.Row="2" Grid.Column="3" Orientation="Horizontal" Spacing="5">
            <Button Command="{Binding StartTrainingCommand}">Start</Button>
            <Button Command="{Binding SaveModelCommand}" CommandParameter="{Binding $parent[Window]}">Save</Button>
            <Button Command="{Binding StartTrainingCancelCommand}">Stop</Button>
        </StackPanel>
    </Grid>
</UserControl>